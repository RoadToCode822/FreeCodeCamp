//------------------------------------------------------------------------------------------------------------------------------
//8 Bonfire: Return Largest Numbers in Arrays
//Yields the right answer but FCC shows this code to be incorrect
var largest = 0;
var num = [];
function largestOfFour(arr) {
  for (i=0; i<arr.length; i++){
  var subArray = arr[i];
  for (j = 0; j < subArray.length; j++){
      if(largest < subArray[j]) {
        largest = subArray[j];
      }
    }
  num.push(largest);
  }
  return num;
}
largestOfFour([[4, 5, 1, 3], [13, 27, 18, 26], [32, 35, 37, 39], [1000, 1001, 857, 1]]);


// Correct answer using loops:
/*
function largestOfFour(arr) {
  var largest = 0;
  var num = [];
  for (i=0; i<arr.length; i++){
  var subArray = arr[i];
  for (j = 0; j < subArray.length; j++){
    if(largest < subArray[j]) {
      largest = subArray[j];
    }
    }
   num.push(largest);
   largest = 0;
  }
  return num;
}
largestOfFour([[4, 5, 1, 3], [13, 27, 18, 26], [32, 35, 37, 39], [1,2,3,4]]);
*/


//Using Math Object
/*
function largestOfFour(arr) {
  var num = [];
  for (i=0; i<arr.length; i++){
  var largest = Math.max.apply(null, arr[i]);
  num.push(largest);
  }
  return num;
}
largestOfFour([[4, 5, 1, 3], [13, 27, 18, 26], [32, 35, 37, 39], [1000, 1001, 857, 1]]);
*/


//Correct answer using Javascript's math object
/*
function largestOfFour(arr) {
  var num = [];
  for (var i=0; i<arr.length; i++) {
    var subArray = arr[i];      
       var largest = Math.max.apply(Math, subArray);
        num.push(largest);
} 
  return num;
}

largestOfFour([[4, 5, 1, 3], [13, 27, 18, 26], [32, 35, 37, 39], [1000, 1001, 857, 1]]);
*/

//------------------------------------------------------------------------------------------------------------------------------
//9 Bonfire: Confirm the Ending
/*
function end(str, target) {
  var targetLength = target.length;
  var firstString = str.substr(-targetLength);
  if(firstString === target){
    return true;
  }
  else {
    return false;
  }
}

end('Bastian', 'n');
*/

// Simpler way of doing it:
/*
function end(str, target) {
  var firstString = str.substr(-target.length);

    return firstString === target;
}

end('Bastian', 'n');
*/

//------------------------------------------------------------------------------------------------------------------------------
//10 Bonfire: Repeat a string repeat a string
// How I Did It:
/*
function repeat(str, num) {
  if (num < 0){
    return "";
  }
  return str.repeat(num);
}

repeat('abc', 3);
*/


//------------------------------------------------------------------------------------------------------------------------------
//11 Bonfire: Truncate a string
// How I Did It:
/*
function truncate(str, num) {
  if (str.length <= num){
    return str;
  }
  else {
  return str.slice(0, (num - 3)) + "...";
  }
}

truncate('A-tisket a-tasket A green and yellow basket', 11);
*/
